import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import oracle.jdbc.OraclePreparedStatement; 


class ConvertTCASE { 
	
	static int BATCH_SIZE = 10000;
	static long  Counter = 0;
	static long  InsCounter = 0;
	static long  TSUBCASE_counter = 0;
	static long TPERSON_counter = 0;
	static long TCHARGE_counter = 0;
	static DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
    static Connection src;
    static Connection trg;
    static Connection trg2;
    static Statement stmt;
    static Statement stmt2;
    static Statement stmt3;
    static int ID;
    static PreparedStatement ps1;
    static PreparedStatement ps_tcharge;
    static PreparedStatement ps_tperson;
    static ResultSet rs3;
    static ResultSet rs4;
    static ResultSet rs5;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */	 
public static void main(String args[])
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
{  
	
	Date date = new Date();
	System.out.println("Start time is " + dateFormat.format(date)); 

	
	
try{  
//step1 load the driver class  
Class.forName("oracle.jdbc.driver.OracleDriver");  
  
//step2 create  the connection object  
 src=DriverManager.getConnection(  
"jdbc:oracle:thin:@bison:1521:TRNLV","court_migrate","cm23456"); 


 trg=DriverManager.getConnection(  
"jdbc:oracle:thin:@bison:1521:TRNLV","vegas_training2","vt123456");  
 trg.setAutoCommit(false);
 
 trg2=DriverManager.getConnection(  
"jdbc:oracle:thin:@bison:1521:TRNLV","vegas_training2","vt123456"); 

  
//step3 create the statement object  
 stmt=src.createStatement();  
 stmt2=src.createStatement(); 
 stmt3=trg.createStatement(); 
 
Statement Trgstmt=trg.createStatement(); 

//Statement insertTCASE=trg.createStatement();

PreparedStatement ps = trg.prepareStatement("insert into TCASE " +
  "(ID , " +
  " CREATEUSERREALNAME, " +     
  " CREATEUSERNAME,     " +     
  " DATECREATED,        " +                 // TIMESTAMP(6),
  " LASTUPDATEUSERREALNAME, " +  
  " LASTUPDATEUSERNAME, " +     
  "LASTUPDATED, " +                       // TIMESTAMP(6),
  "MEMO,   " +                 
  "OPTLOCK, " +                           // NOT NULL,
  "SOURCECASENUMBER, " +       
  "CASENAME, " +               
  "CASENUMBER, " +                        // VARCHAR2(255 CHAR)    NOT NULL,
  "CASETYPE, " +                         // VARCHAR2(255 CHAR),
  "FILINGDATE, " +                        // TIMESTAMP(6),
  "STATUS, " +                            // VARCHAR2(255 CHAR),
  "STATUSDATE ) " +                        // TIMESTAMP(6)
" values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"); 
((OraclePreparedStatement)  ps).setExecuteBatch (BATCH_SIZE);

PreparedStatement ps_tpersonidentifier = trg.prepareStatement("insert into TPERSONIDENTIFIER " +
		  "(ID , " +
		  " CREATEUSERREALNAME, " +     
		  " CREATEUSERNAME,     " +     
		  " DATECREATED,        " +                 // TIMESTAMP(6),
		  " LASTUPDATEUSERREALNAME, " +  
		  " LASTUPDATEUSERNAME, " +     
		  "LASTUPDATED, " +                       // TIMESTAMP(6),
		  "MEMO,   " +                 
		  "PERSONIDENTIFIERNUMBER) " +                           // NOT NULL,
		" values (HIBERNATE_SEQUENCE.NEXTVAL, ?, ?, ?, ?, ?, ?, ?,? )"); 
((OraclePreparedStatement)  ps_tpersonidentifier).setExecuteBatch (BATCH_SIZE);




ps1 = trg.prepareStatement("insert into TSUBCASE " +
		  "(ID , " +
		  " CREATEUSERREALNAME, " +     
		  " CREATEUSERNAME,     " +     
		  " DATECREATED,        " +                // TIMESTAMP(6),
		  " LASTUPDATEUSERREALNAME, " +  
		  " LASTUPDATEUSERNAME, " +     
		  "LASTUPDATED, " +                       // TIMESTAMP(6),
		  "MEMO,   " +                 
		  "OPTLOCK, " +                           // NOT NULL,
		  "SOURCECASENUMBER, " +            	  // VARCHAR2(255 CHAR),
		  "STATUS, "           +                       
		  "STATUSDATE , "      +                  // TIMESTAMP(6),
		  "VIOLATIONDATE, "    +                  // TIMESTAMP(6),
		  "CASE_ID )"  +                          // NUMBER(19)       NOT NULL,
		" values (HIBERNATE_SEQUENCE.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"); 
((OraclePreparedStatement) ps1).setExecuteBatch (BATCH_SIZE);


ps_tcharge = trg.prepareStatement("insert into TCHARGE " +
		  "(ID , " +
		  " CREATEUSERREALNAME, " +     
		  " CREATEUSERNAME,     " +     
		  " DATECREATED,        " +               
		  " LASTUPDATEUSERREALNAME, " +  
		  " LASTUPDATEUSERNAME, " +     
		  "LASTUPDATED, " +                      
		  "MEMO,   " +                 
		  "OPTLOCK, " +                          
		  "SOURCECASENUMBER, " +            	 
		  "STATUS, "           +                       
		  "STATUSDATE , "      +                  
		  "ASSOCIATEDPARTY_ID, "    +            
		  "STATUTE_ID )"  +                          
		" values (HIBERNATE_SEQUENCE.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"); 
((OraclePreparedStatement) ps_tcharge).setExecuteBatch (BATCH_SIZE);


ps_tperson = trg.prepareStatement("insert into TPERSON " +
		  "(ID , " +
		  " CREATEUSERREALNAME, " +     
		  " CREATEUSERNAME,     " +     
		  " DATECREATED,        " +               
		  " LASTUPDATEUSERREALNAME, " +  
		  " LASTUPDATEUSERNAME, " +     
		  "LASTUPDATED, " +                      
		  "MEMO,   " +                 
		  "OPTLOCK, " +                          
		  "FIRSTNAME, "              +            	 
		  "LASTNAME, "               +                       
		  "MIDDLENAME , "            +    
		  "CMSCASENUMBER , "         +   
		  "HISTORYNUMBER , "         +         
		  "PERSONIDENTIFIER_ID) "    +            
		" values (HIBERNATE_SEQUENCE.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,? )"); 
((OraclePreparedStatement) ps_tperson).setExecuteBatch (BATCH_SIZE);

  
//step4 execute query  MAIN LOOP FOR CASE BUILDING
ResultSet rs=stmt.executeQuery("select  history_nbr from court.cms_case where rownum < 101 group by history_nbr");

ResultSet rs1=Trgstmt.executeQuery("select HIBERNATE_SEQUENCE.NEXTVAL from DUAL");


while (rs1.next()) {
	
	ID = rs1.getInt(1);
}
rs1.close();

while(rs.next())  {
	//System.out.println("Number of records on COURT.CMS_CASE " + rs.getInt(1));
	
	
	InsCounter++;
	ps.setInt(1, ID);
	ps.setString(2, "ODI"); 
	ps.setString(3, "ODI"); 
	ps.setDate(4, new java.sql.Date(System.currentTimeMillis())); 
	ps.setString(5, "ODI"); 
	ps.setString(6, "ODI");
	ps.setDate(7, new java.sql.Date(System.currentTimeMillis())); 
	ps.setString(8, " " );   // memo
	ps.setInt(9, 0 );
	ps.setInt(10,rs.getInt(1));             // sourcecasenumber
	ps.setString(11,  " ");    // casename
	ps.setString(12,  rs.getString(1));    // casenumber
	ps.setString(13,  "TR");               // Case type
	ps.setDate(14,  new java.sql.Date(System.currentTimeMillis()));               // Filing Date
	ps.setString(15, "CLOSE");
	ps.setDate(16, new java.sql.Date(System.currentTimeMillis()));
	ps.executeUpdate(); //JDBC queues this for later execution               *** INSERT TCASE *****
	
	
	ps_tpersonidentifier.setString(1, "ODI"); 
	ps_tpersonidentifier.setString(2, "ODI"); 
	ps_tpersonidentifier.setDate(3, new java.sql.Date(System.currentTimeMillis())); 
	ps_tpersonidentifier.setString(4, "ODI"); 
	ps_tpersonidentifier.setString(5, "ODI");
	ps_tpersonidentifier.setDate(6, new java.sql.Date(System.currentTimeMillis())); 
	ps_tpersonidentifier.setString(7, " " );   // memo
	ps_tpersonidentifier.setInt(8,ID);             // PersonIdentifierNumber
	ps_tpersonidentifier.executeUpdate();
	
	
	/*  Insert LGOIC here for children Tables */
	
	Build_SubCase(rs.getInt(1), ID );
	Build_TPERSON(rs.getInt(1), ID);
	ID++;
   
	Counter++;
	if (Counter > 1000) {
		 ((OraclePreparedStatement)ps).sendBatch(); // JDBC sends the queued request
		 ((OraclePreparedStatement)ps_tpersonidentifier).sendBatch(); // JDBC sends the queued request
		 Counter = 0;
	}
	
	
}
  
//step5 close the connection object 
trg.commit();
trg.close();
src.close(); 

  System.out.println("Total rows inserted into TPERSONIDENTIFIER " + InsCounter);
  System.out.println("Total rows inserted into TPERSON " + TPERSON_counter);
  System.out.println("Total rows inserted into TCASE " + InsCounter);
  System.out.println("Total rows inserted into TSUBCASE " + TSUBCASE_counter);
  System.out.println("Total rows inserted into TCHARGE " + TSUBCASE_counter);
  
	date = new Date();
	System.out.println("End time is " + dateFormat.format(date)); 
  
} catch(Exception e)
    { System.out.println(e);}  

  
}


/* BULD TSUBCASE */
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
static void Build_SubCase(int IN_HISTORY_NBR, int IN_ID)  
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
{
	
	int return_val;
	int ws_counter = 0;
	
	
	try 
	
		{

		//Statement stmt=src.createStatement();
		   rs3=stmt2.executeQuery("select  case_nbr, status, to_char(status_dttm, 'dd-mon-yyyy') status_dttm, to_char(violation_dttm, 'dd-mon-yyyy'), history_nbr, defendant, dob, ssn, veh_lic_nbr,   last_name, first_name, middle_name, dl_nbr,  viol_original_code from court.cms_case where history_nbr =" + IN_HISTORY_NBR );
		
			while (rs3.next()) {
				TSUBCASE_counter++;
				
				ps1.setString(1, "ODI"); 
				ps1.setString(2, "ODI"); 
				ps1.setDate(3, new java.sql.Date(System.currentTimeMillis())); 
				ps1.setString(4, "ODI"); 
				ps1.setString(5, "ODI");
				ps1.setDate(6, new java.sql.Date(System.currentTimeMillis())); 
				ps1.setString(7, " " );   // memo
				ps1.setInt(8, 0 );        // optlock
				
				
				ps1.setString(9,   rs3.getString("CASE_NBR"));         // sourcecasenumber
				ps1.setString(10,  rs3.getString(2));         // status
				ps1.setString(11,  rs3.getString(3));         // status Date
				
     			ps1.setString(12,  rs3.getString(4));         // violationdate
				
				ps1.setInt(13, ID);                          // case_id
				return_val = ps1.executeUpdate(); //JDBC queues this for later execution *** INSERT TSUBCASE *****
			
				ps_tcharge.setString(1, "ODI"); 
				ps_tcharge.setString(2, "ODI"); 
				ps_tcharge.setDate(3, new java.sql.Date(System.currentTimeMillis())); 
				ps_tcharge.setString(4, "ODI"); 
				ps_tcharge.setString(5, "ODI");
				ps_tcharge.setDate(6, new java.sql.Date(System.currentTimeMillis())); 
				ps_tcharge.setString(7, " " );   // memo
				ps_tcharge.setInt(8, 0 );        // optlock
				
				
				ps_tcharge.setString(9,   rs3.getString("CASE_NBR"));         // sourcecasenumber
				ps_tcharge.setString(10,  rs3.getString("STATUS"));         // status
				ps_tcharge.setString(11,  rs3.getString("status_dttm"));         // status Date
				ps_tcharge.setString(12,  "0");                      // ASSOCIATEDPARTY_ID,
				ps_tcharge.setString(13,  rs3.getString(4));         // violationdate
				
		
				ps_tcharge.setInt(14, GetStatute(rs3.getString("viol_original_code")));                          // STATUTE_ID
				return_val = ps_tcharge.executeUpdate(); //JDBC queues this for later execution *** INSERT TCHARGE ***
				TCHARGE_counter++;
		
				
				ws_counter++;
				if (ws_counter > 1000) {
			  	 ((OraclePreparedStatement)ps1).sendBatch(); // JDBC sends the queued request
			  	 ((OraclePreparedStatement)ps_tcharge).sendBatch(); // JDBC sends the queued request
					 ws_counter = 0;
				}
				
			} 
	
		} // End Try
	catch (Exception e)  {System.out.println(e);}
	 // End-While


}  // End Medthod - Build_SubCase

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
static int GetStatute(String IN_STATUTE_ID) 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
{
	int OUT_STATUTE_ID = 0;
	
	System.out.println(IN_STATUTE_ID + " " + OUT_STATUTE_ID);
	try {
	      rs5=stmt3.executeQuery("select statute_id from  TSTATUTECATEGORY where reporttype = 'CMS' and value = " + IN_STATUTE_ID );
	
	      while (rs5.next()) {
	    	  OUT_STATUTE_ID =  rs5.getInt(1);
	      }
	      
	}
	catch (Exception e) { System.out.println(e.getMessage()); }
	System.out.println(IN_STATUTE_ID + " " + OUT_STATUTE_ID);
	return OUT_STATUTE_ID;

}


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
static void Build_TPERSON (int IN_HISTORY_NBR, int IN_ID) 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
{
	
	int ws_counter = 0;
	
	try {
	      rs4=stmt2.executeQuery("select   first_name,last_name, middle_name, numeric_case_nbr, defendant, dob, ssn,   dl_nbr,  from court.cms_case where history_nbr =" + IN_HISTORY_NBR + " and rownum =1 ");
	
	      while (rs4.next()) {
				TPERSON_counter++;
	
				ps_tperson.setString(1, "ODI"); 
				ps_tperson.setString(2, "ODI"); 
				ps_tperson.setDate(3, new java.sql.Date(System.currentTimeMillis())); 
				ps_tperson.setString(4, "ODI"); 
				ps_tperson.setString(5, "ODI");
				ps_tperson.setDate(6, new java.sql.Date(System.currentTimeMillis())); 
				ps_tperson.setString(7, " " );   // memo
				ps_tperson.setInt(8, 0 );        // optlock
				
				
				ps_tperson.setString(9,   rs4.getString(1));         // FirstName
				ps_tperson.setString(10,  rs4.getString(2));         // Last name
				ps_tperson.setString(11,  rs4.getString(3));         // Middle Name
				ps_tperson.setInt(12,     rs4.getInt(4));            // CMSCASENUMBER
				ps_tperson.setInt(13,     IN_HISTORY_NBR);           // History
				ps_tperson.setInt(14,     IN_ID);                    // case_id
				ps_tperson.executeUpdate(); //JDBC queues this for later execution 

			
				
				ws_counter++;
				if (ws_counter > 1000) {
			  	 ((OraclePreparedStatement)ps_tperson).sendBatch(); // JDBC sends the queued request
					 ws_counter = 0;
				}
				

	      }
	
	
	} catch (Exception e) { System.out.println( e.getMessage()) ; }



}

}






  